package com.mycompany.enduralogin;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.HashMap;
import java.util.Map;

public class EnduraLoginGUI extends JFrame {
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JButton loginButton;
    private JButton registerButton;


    private static final String CREDENTIALS_FILE = "credentials.txt";

 
    private static Map<String, String> registeredUsers = new HashMap<>();

    public EnduraLoginGUI() {
        setTitle("Endura");
        setSize(500, 300); // Increase the size of the JFrame
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(null);
        getContentPane().setBackground(Color.WHITE); // Set background color

  
        JLabel titleLabel = new JLabel("Endura");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 24)); // Increase the font size
        titleLabel.setBounds(150, 20, 250, 30);
        add(titleLabel);

     
        JLabel usernameLabel = new JLabel("Usuario:");
        usernameLabel.setBounds(50, 80, 100, 25);
        add(usernameLabel);

        usernameField = new JTextField();
        usernameField.setBounds(150, 80, 250, 25); // Increase the width of the text field
        add(usernameField);

        JLabel passwordLabel = new JLabel("Contrase침a:");
        passwordLabel.setBounds(50, 120, 100, 25);
        add(passwordLabel);

        passwordField = new JPasswordField();
        passwordField.setBounds(150, 120, 250, 25); // Increase the width of the text field
        add(passwordField);

        loginButton = new JButton("Inicia Sesi칩n");
        loginButton.setBounds(100, 180, 120, 40); // Increase the size of the button
        loginButton.setBackground(new Color(46, 139, 87));
        loginButton.setForeground(Color.WHITE);
        add(loginButton);

        registerButton = new JButton("Registrate");
        registerButton.setBounds(260, 180, 120, 40); // Increase the size of the button
        registerButton.setBackground(new Color(70, 130, 180));
        registerButton.setForeground(Color.WHITE);
        add(registerButton);

        loadCredentialsFromFile(); // Load credentials from file

        loginButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String password = new String(passwordField.getPassword());

                if (authenticateUser(username, password)) {
                    JOptionPane.showMessageDialog(EnduraLoginGUI.this, "Inicio de sesi칩n exitoso");
                } else {
                    JOptionPane.showMessageDialog(EnduraLoginGUI.this, "Usuario o contrase침a invalido. Vuelve a intentarlo.");
                }
            }
        });

       
        registerButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String username = usernameField.getText();
                String password = new String(passwordField.getPassword());

                if (registerUser(username, password)) {
                    JOptionPane.showMessageDialog(EnduraLoginGUI.this, "Registro exitoso!");
                    saveCredentialsToFile(); // Save credentials to file after registration
                } else {
                    JOptionPane.showMessageDialog(EnduraLoginGUI.this, "Usuario ya existente. Por favor selecciona uno diferente.");
                }
            }
        });
    }

    
    private void loadCredentialsFromFile() {
        try (BufferedReader reader = new BufferedReader(new FileReader(CREDENTIALS_FILE))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(":");
                if (parts.length == 2) {
                    registeredUsers.put(parts[0], parts[1]);
                }
            }
        } catch (IOException e) {
            System.err.println("Error cargando credenciales: " + e.getMessage());
        }
    }

    
    private void saveCredentialsToFile() {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(CREDENTIALS_FILE))) {
            for (Map.Entry<String, String> entry : registeredUsers.entrySet()) {
                writer.write(entry.getKey() + ":" + entry.getValue());
                writer.newLine();
            }
        } catch (IOException e) {
            System.err.println("Error guardando credenciales: " + e.getMessage());
        }
    }


    private boolean authenticateUser(String username, String password) {
        return registeredUsers.containsKey(username) && registeredUsers.get(username).equals(password);
    }

  
    private boolean registerUser(String username, String password) {
        if (!registeredUsers.containsKey(username)) {
            registeredUsers.put(username, password);
            return true;
        }
        return false;
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                EnduraLoginGUI gui = new EnduraLoginGUI();
                gui.setVisible(true);
            }
        });
    }
}
